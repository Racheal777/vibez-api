name: Deploy to EC2 with Docker Image

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t vibez:latest -f vibes/Dockerfile vibes

      # Step 3: Push Docker Image to Registry
      # Replace with your Docker registry
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker tag vibez:latest rachealcodez/vibez:latest
          docker push rachealcodez/vibez:latest


      # Step 4: Deploy Docker Image on EC2
      - name: Transfer Docker Compose or Deployment Script
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.IP_ADDRESS }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          source: vibes/docker-compose.yaml
          target: /home/ubuntu/api

      - name: Deploy Docker Container on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.IP_ADDRESS }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/ubuntu/api/vibes
            
            echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" > .env
            echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
            echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
            echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
            echo "API_KEY=${{ secrets.API_KEY }}" >> .env
            echo "API_SECRET=${{ secrets.API_SECRET }}" >> .env
            echo "CLOUD_NAME=${{ secrets.CLOUD_NAME }}" >> .env
           
            
            docker-compose down || true
            docker-compose pull
            docker-compose up -d
